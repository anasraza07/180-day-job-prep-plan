Explore krne waalay topics:
- floats and clear fix in CSS
- tracks in CSS Grid
- Resolving Conflicts in Git Deep Dive

HTML: (Traversy Media)
HTML = markup language for creating webpages / documents, building blocks of the web.
index.html = root / home page of a website
ctrl + u => shortcut to see tha source code
- chrome tools are really helpful
Block level elements = div, h1-h6, p, form
Inline level elements = span, img, a, input, label
<strong>, <em> tags are semantic tags used to bold or emphasize the text
Tag attributes = provide information about an element
- <ul> tag has padding-left of 40px by default
Unordered list = usually used for website navigation like at navbar
Tables = pehle use hote thay 1999s mein for website layout but ab ye recommended nhi hain, ab sirf kisi tabular data ke liye use kiye jaate hain html mein
Form mein jo attributes hain like action aur method, action mein koi file ya server ka address dete hain jahan form data recieve hote hai aur method mein "POST" ya "GET" dete hain yaani POST for safe data and GET for searching data bcuz it is not safe, data url mein nazar aata hai
input name attribute = ye bhi server side programming mein use hota hai like jo data server pr jaayega wo usi naam se jaayega jo is name attribute mein dengay ham
Semantic tags = clearly describe its meaning to both the browser and the developer, they are: <header>, <footer>, <aside>, <main>, <article>, <nav>, <section> and <details>.
<small> tag is usually used for create dates like sub content

CSS BASICS: (Traversy Media)
CSS = used for website layout and design, can be extended with Sass/Less

CSS FLEXBOX: (Net Ninja)
flex-grow = we use it to expand elements into available space by giving each flex item a growth rate
flex-shrink = we use it to shrink elements as the browser gets smaller by giving each flex item a shirnk rate
- by default, flex items shrink in proportion to one another at same rate
flex-basis = minimum width ki tarh kaam krta hai aur same tarh behave krta hai, inital width set krta hai items ki, bs eik farq hai ke minimum width dene pr shrink krne se horizontal scrollbar aata hai jabke flex-basis ka use krke shrink krne se items shrink hojaate hain 
- minimum width use krke flex grow: 1; krne se sb items grow krke same hojaate hain jabke flex-basis use krke flex-grow: 1; krne se items inital width ke hisaab se hi grow krte hain
flex-flow = shorthand for flex-direction and flex-flow
order = default value 0 hoti hai aur agr 0 value khud se di to source code ke according items order hongay, jitni lowest value wo item pehle aayega aur highest order waala item last mein aayega

CSS Grid (Net Ninja)
grid rows = automatically create hoti hain when we have content aur column fix hote hain so phr nayi row mein content shift hojaata hai
grid-auto-rows = container ki property hai jiska use krke ham tamam grid items ki height set krte hain, is mein minmax bhi use kr skte hain
align-items & justify-content = container property hai jo saaray items ki alignment ke liye use krte hain aur content jitni space le kr items align hojaate hain

Responsive Design in CSS (Kevin Powell)
- by default things are responsive, agr sirf html code hai aur eik line css ki nhi hai tb bhi wo website responsive hogi, hn thori ajeeb dikhegi but hogi responsive
- css mein values de kr ham khud responsive khatam krte hain, so by default responsive hoti hai 100% width ki waja se on all block level elements, so that's why while creating layout we should never use fixed width (like in pixels) for parent element.
- and for child element also we should never use fixed width bcuz is se overflow issue aajata hai, content overflow hota hai

- height kabhi nhi deni chahiye is a general suggestion
- the web wants to be responsive with css, ham isko non responsive banaate hain
- so ham height ki jaga padding use kr skte hain jis se layout responsive rehta hai

-em unit font-size mein dia hai so apne parent se relate krta hai yaani parents mein agr kisi ka font size hai to usi ke according work krta hai, but agr kisi parent ka font size nhi hai so body ka 16px ke according work krta hai, its like compounding.
- aur agr kisi aur css property mein em unit use kia to wo usi element ke font-size se relate krta hai
-rems unit are always looking for root, so ye compounding ka issue solve krti hai aur html ke font-size se relate krta hai ye rem unit
- so rem unit consistency ke liye use hota hai aksar
- so for font size we should use rems, and em unit for margin (jo lock naa krni ho like margin-bottom) and padding, wrna margin ke liye bhi rem use kr skte hain if we want consistent margin

- width ke saath ham use krte hain max-width for better desingn on big screen so is se text aur content poora stretch nhi hota from left to right, balke eik specific size pr ruk jaata hai
- height ki tarah min-width bhi zaada use nhi krte bcuz is se bhi issues aa skte hain responsiveness mein, so jahan bht need ho wahi use krna chahiye

flex items = apni width ko kam se kam rkhne ki koshish krte hain yaani content ke hisaab se hi, taakay eik row mein sb fit hojaayen, zaada se zaada 100% width bhi hoti hai if there is only one flex item
- so ham flex items ko 100% de skte hain so that agr content kam bhi hojaye width kam naa ho
- gap property for flexbox use nhi krni chahiye bcuz ye sirf firefox pr sahi chalti hai, so iski jaga ham + combinator selector ka use krte hain
"+" combinator selector = adjacent sibling dekhta hai before element

can i use website for checking css properties if they are running or not?

- flexbox by default apne items ki height stretch krke rkhta hai
- justify-content: space-between; ke liye zaroori hai ke ham items ki width kch naa kch kam rkhen jbhi property work karegi
- img ko responsive banaane ke liye hamesha max-width: 100% use karen thats it
- grid is for structured layout, while flexbox is for intrint sizing
- both can work same for us


Git Deep Dive (Traversy Media)
Topics:
Git Version Control
Subtopics:
Commits
Branches
Merging
Remote Repositories

Git = eik distributed Version Control system (vcs) hai jo developers ki help krta hai unke codebase track krne mein, eik doosre ke sth collaborate krne mein aur project ke multiple versions manage krne mein. In simple words it is used to backup your code. It is decentralized (means you dont need a central server)
Github = web based platform hai jo version control aur collaboration ke liye use hota hai. Repositories host krta hai aur eik interface provide krta hai code manage krne ke liye aur bhi bht kch krta hai

branching = koi naya feature ya bug fixing pr kaam krne ke liye hamain allow krta hai without affecting main codebase, aur phr jb ham ready hon so apne kaam ko merge kr skte hain

to completely delete .git file = rm -rf .git
"U" and green color in vs code files shows = untracked (not added in staging area)
"A" shows = added
"M" shows = modified

git log = command that shows commits starting from most recent
and "q" to quit from it

shortcut command to add and commit at a same time = git commit -am "commit msg"
another thing you can do is = git add . && git commit -m "added task 7"

Explore: what is SSH keys and difference b/w http and ssh while git clone

create and switch to that branch = git checkout -b feature/login
- feature/login and bugfix/responsiveness are naming conventions

switch to branch = git checkout main
delete branch locally = git branch -d feature/login
to merge branch = git merge feature/login