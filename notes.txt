Explore krne waalay topics:
- floats and clear fix in CSS
- tracks in CSS Grid
- Resolving Conflicts in Git Deep Dive
- css animation tutorial 12 (after learning JS)
- :target, :notlexbox pseudo class in CSS
- type of null is object why? is this wrong? and why it gives wrong value? in JS Basics
- day 10, 11 & 12 coding section is left + day12 some topics of js is also left

HTML: (Traversy Media)
HTML = markup language for creating webpages / documents, building blocks of the web.
index.html = root / home page of a website
ctrl + u => shortcut to see tha source code
- chrome tools are really helpful
Block level elements = div, h1-h6, p, form
Inline level elements = span, img, a, input, label
<strong>, <em> tags are semantic tags used to bold or emphasize the text
Tag attributes = provide information about an element
- <ul> tag has padding-left of 40px by default
Unordered list = usually used for website navigation like at navbar
Tables = pehle use hote thay 1999s mein for website layout but ab ye recommended nhi hain, ab sirf kisi tabular data ke liye use kiye jaate hain html mein
Form mein jo attributes hain like action aur method, action mein koi file ya server ka address dete hain jahan form data recieve hote hai aur method mein "POST" ya "GET" dete hain yaani POST for safe data and GET for searching data bcuz it is not safe, data url mein nazar aata hai
input name attribute = ye bhi server side programming mein use hota hai like jo data server pr jaayega wo usi naam se jaayega jo is name attribute mein dengay ham
Semantic tags = clearly describe its meaning to both the browser and the developer, they are: <header>, <footer>, <aside>, <main>, <article>, <nav>, <section> and <details>.
<small> tag is usually used for create dates like sub content

CSS BASICS: (Traversy Media)
CSS = used for website layout and design, can be extended with Sass/Less

CSS FLEXBOX: (Net Ninja)
flex-grow = we use it to expand elements into available space by giving each flex item a growth rate
flex-shrink = we use it to shrink elements as the browser gets smaller by giving each flex item a shirnk rate
- by default, flex items shrink in proportion to one another at same rate
flex-basis = minimum width ki tarh kaam krta hai aur same tarh behave krta hai, inital width set krta hai items ki, bs eik farq hai ke minimum width dene pr shrink krne se horizontal scrollbar aata hai jabke flex-basis ka use krke shrink krne se items shrink hojaate hain 
- minimum width use krke flex grow: 1; krne se sb items grow krke same hojaate hain jabke flex-basis use krke flex-grow: 1; krne se items inital width ke hisaab se hi grow krte hain
flex-flow = shorthand for flex-direction and flex-flow
order = default value 0 hoti hai aur agr 0 value khud se di to source code ke according items order hongay, jitni lowest value wo item pehle aayega aur highest order waala item last mein aayega

CSS Grid (Net Ninja)
grid rows = automatically create hoti hain when we have content aur column fix hote hain so phr nayi row mein content shift hojaata hai
grid-auto-rows = container ki property hai jiska use krke ham tamam grid items ki height set krte hain, is mein minmax bhi use kr skte hain
align-items & justify-content = container property hai jo saaray items ki alignment ke liye use krte hain aur content jitni space le kr items align hojaate hain

Responsive Design in CSS (Kevin Powell)
- by default things are responsive, agr sirf html code hai aur eik line css ki nhi hai tb bhi wo website responsive hogi, hn thori ajeeb dikhegi but hogi responsive
- css mein values de kr ham khud responsive khatam krte hain, so by default responsive hoti hai 100% width ki waja se on all block level elements, so that's why while creating layout we should never use fixed width (like in pixels) for parent element.
- and for child element also we should never use fixed width bcuz is se overflow issue aajata hai, content overflow hota hai

- height kabhi nhi deni chahiye is a general suggestion
- the web wants to be responsive with css, ham isko non responsive banaate hain
- so ham height ki jaga padding use kr skte hain jis se layout responsive rehta hai

-em unit font-size mein dia hai so apne parent se relate krta hai yaani parents mein agr kisi ka font size hai to usi ke according work krta hai, but agr kisi parent ka font size nhi hai so body ka 16px ke according work krta hai, its like compounding.
- aur agr kisi aur css property mein em unit use kia to wo usi element ke font-size se relate krta hai
-rems unit are always looking for root, so ye compounding ka issue solve krti hai aur html ke font-size se relate krta hai ye rem unit
- so rem unit consistency ke liye use hota hai aksar
- so for font size we should use rems, and em unit for margin (jo lock naa krni ho like margin-bottom) and padding, wrna margin ke liye bhi rem use kr skte hain if we want consistent margin

- width ke saath ham use krte hain max-width for better desingn on big screen so is se text aur content poora stretch nhi hota from left to right, balke eik specific size pr ruk jaata hai
- height ki tarah min-width bhi zaada use nhi krte bcuz is se bhi issues aa skte hain responsiveness mein, so jahan bht need ho wahi use krna chahiye

flex items = apni width ko kam se kam rkhne ki koshish krte hain yaani content ke hisaab se hi, taakay eik row mein sb fit hojaayen, zaada se zaada 100% width bhi hoti hai if there is only one flex item
- so ham flex items ko 100% de skte hain so that agr content kam bhi hojaye width kam naa ho
- gap property for flexbox use nhi krni chahiye bcuz ye sirf firefox pr sahi chalti hai, so iski jaga ham + combinator selector ka use krte hain
"+" combinator selector = adjacent sibling dekhta hai before element

can i use website for checking css properties if they are running or not?

- flexbox by default apne items ki height stretch krke rkhta hai
- justify-content: space-between; ke liye zaroori hai ke ham items ki width kch naa kch kam rkhen jbhi property work karegi
- img ko responsive banaane ke liye hamesha max-width: 100% use karen thats it
- grid is for structured layout, while flexbox is for intrint sizing
- both can work same for us


Git Deep Dive (Traversy Media)
Topics:
Git Version Control
Subtopics:
Commits
Branches
Merging
Remote Repositories

Git = eik distributed Version Control system (vcs) hai jo developers ki help krta hai unke codebase track krne mein, eik doosre ke sth collaborate krne mein aur project ke multiple versions manage krne mein. In simple words it is used to backup your code. It is decentralized (means you dont need a central server)
Github = web based platform hai jo version control aur collaboration ke liye use hota hai. Repositories host krta hai aur eik interface provide krta hai code manage krne ke liye aur bhi bht kch krta hai

branching = koi naya feature ya bug fixing pr kaam krne ke liye hamain allow krta hai without affecting main codebase, aur phr jb ham ready hon so apne kaam ko merge kr skte hain

to completely delete .git file = rm -rf .git
"U" and green color in vs code files shows = untracked (not added in staging area)
"A" shows = added
"M" shows = modified

git log = command that shows commits starting from most recent
and "q" to quit from it

shortcut command to add and commit at a same time = git commit -am "commit msg"
another thing you can do is = git add . && git commit -m "added task 7"

Explore: what is SSH keys and difference b/w http and ssh while git clone

create and switch to that branch = git checkout -b feature/login
- feature/login and bugfix/responsiveness are naming conventions

switch to branch = git checkout main
delete branch locally = git branch -d feature/login
to merge branch = git merge feature/login

vercel se ham github repo ke through cicd yaani continuous integration aur continuous deployment kr skte hain yaani code push krdo aur deploy krdo first time, ab jb bhi code push hoga website update hoti rahegi 

Day07 - CSS Variables
Topics:
Custom Properties
Dynamic Styling
Inheritance

css Variables DOM ka access rkhte hain so that javascript ke through ham change kr skte hain, media queries ke according change kr skte hain eik hi jaga, themes ke liye use kr skte hain
:root eik pseudo class hai jo root element ko point krti hai basically our html element
- overriding css Variables = ham ye bhi kr skte hain jese root mein Variables define krne ke baad usi Variable ki value kisi div ya seciton ke andr change kr skte hain jis se us section mein values alag apply hongi aur poore root yaani html mein alag values apply hongi, ye bhi bht useful hai
local Variable = isi tarh se ye local Variables hote hain jo bilkul first time root mein nhi balke kisi tag mein ham likhte hain aur wo local Variable kahi aur work nhi karega except that tag
- isi tarh ham css Variables ko themes ke liye use kr skte hain just like eik class dekr us class mein kch Variables set krliye aur phr wo specific section ya koi bhi element hai wo eik alag tarh dikhaayi deta hai
Update Variables with javascript = ham change bhi kr skte hain like root element ko get krke us mien jo Variables hain uski values change krdi so ye sb website mein font size change krne ke liye ya themes pick krne ke liye use hota hai
Variables with media queries = ham media query define krke bhi Variable ki value change kr skte hain
Inheritance issues = Variables agr hamne declar kiye aur uski value bhi eik Variable hai to wohi save hojayega, ab aesa nhi hoga ke wo value waala Variable change krne pr ye current Variable bhi change hojaaye
- isi tarh inheritance issues aate hain specially referencing mein ke css Variable ki value hi inherit krta hai naa ke value mein saved Variable.
It means css Variables referencing nhi krta, only value save krleta hai

Day08 - CSS Animations
Topics:
Keyframes
Transitions
Tranform
Animation properties

transform = web elements ko transform krta hai jese stretch, rotate, change their coordinates, skew krna ye sb ke liye transform property use hota hai
translate = transform ki eik value hai jo move krti hai elements ko from one position to another
scale = transform ki another value hai use to make elements bigger or smaller, 1 is default value
rotate = transform ki value hai jo x aur y ke sth nhi balke z ke sth zaada sahi dikhti hai rotateZ zaada sahi lagta hai
transition = property hai jo css properties ko transition krti hai taake web elements foran change naa hon eik slow-mo jesa look aaye
transition property syntax = property-name duration delay timing-function
Keyframes = iske through ham animations define krte hain different tareeqay se jese sbse simplest method hai from and to waala yaani from se to tk animate kro, yahan animation define krke phr element ko as a property animation name de dete hain
animation-fill-mode = ye pop up se rokta hai jese animation end krne pr element again apni default value pr aaajata hai jo acha nhi lata isko set krne liye ye property use hoti hai with forwards value yaani animate ke baad ab wahi rahay, isi tarh agr animation ke from mein kch alag position hai so again pop up krta hai iske liye value backwards use krte hain, so in short ham both bhi use krte hain for better results
repeating animations = ye ham krte hain using animation-iteration-count jisko bataate hain ham ke kitni baar animation run krni hai
animation-direction = ye direction change krta hai jese reverse mein sirf animaiton reverse chalegi, alternate mein from se to aur to se from again and again animation chalegi, jbke alternate-reverse mein same hi hai sirf wo to se start hogi animation ye difference hai
animation-timing-function = ye speed ke liye use krte hain ham, default value iski ease hoti yaani slow fast slow, ham different values de skte hain aur apna custom bhi define kr skte hain jese https://cubic-bezier.com website hai wahan jaakr 
animaiton shorthand = is mien order matter nhi krta but sbse pehle jo number hai wo hamesha duration ka hoga aur iske baad waala delay ki value hogi
- from aur to 2 states hain so jahan 2 states ke liye use krna ho wahan ye use hota hai wrna is se zaada changes ke liye percentages use krte hain
animaiton chaining = yaani eik aur animaiton eik sth same element ko thora saa delay de kr de skte hain so isko animaiton chaining kehte hain
transform-origin = is property se ham origin bhi define kr skte hain element ka ke kahan se turn hona hai ya rotate krna hai etc etc.

Day09 - CSS Pseudo-classes 
Topics:
:hover,
:focus,
:nth-child
styling interactions. 

Pseudo-class = is used to define a special state of an element. jese 
:disabled pseudo class = hamain allow krta hai disabled elements pr style lagaane ke liye
:first-child = jo bhi element first ho apne siblings mein chaahe wo kahi bhi poori body pr wo select hojaata hai aur ham styles apply kr skte hain, isi tarh :last-child aur :nth-child work krte hain.
:nth-child = :nth-child(2), :nth-child(2n), :nth-child(even), :nth-child(odd) ye sb ke sth kaam krta hai
:first-of-type = means koi element jo first hai yaani first p ya first h1 poori body pr wo select krke usko styles apply kr skte hain
pseudo-classes for links = eik to hai :link for unvisited, doosra hai :visited for visited links, teesra hai :hover for mouse over, fourth hai :active for click elements
- Use :link to style links to unvisited pages, 
:hover to style links when you mouse over them, and 
:active to style links when you click on them.
- To style links appropriately, put the :visited rule after the :link rule, but before the :hover and :active rules. So the order should be
:link {}
:visited {}
:hover {}
:active {}
Allowed styles in visited pseudo-class:
- color
- background-color
- border-color (and border-color for separate sides)
- outline color
- column-rule-color
- text-decoration-color
- text-emphasis-color   
- SVG attributes fill and stroke


JavaScript Basics - Traversy Media
- always use const unless you know you are going to reassign the value
- const use krke ham Variable initialize bhi nhi kr skte, koi value assign krni parti hai
let & const = have a block level scope 
primitive data types = directly assigned to memory  
null means basically empty
mehtod = is a function that is associated with an object
.split("") = method hai jo string ke hr character ko alag alag element banaa kr array return krta hai
typescript = is a superset of javascript, its basically javascript with some added features like static typing
.substring()


Day 14 - JavaScript Functions 
paramter = something that we pass to a function while declaring or defining the function.
argument = the actual value we pass to the function while calling or invoking it.
function with parenthesis = executing, calling, invoking the function
function without parenthesis = is the string representation of the function definition itself
rest paramter = allows a function to accept an infinite numbers of arguments as an array. Function definition can have only 1 rest paramter and the rest paramter must be the last paramter
closure = the inner function means the nested function is clousre thats it, simple definition.
inner function = can access the outer function's argument or any Variable that is declared in outer function
- wese to hr function jese hi execute hota hai to ab iske andr create kiye gaye Variables bhi khatam hojaate hain, lekin closure ye hai ke outer ke function ke andr banaaye gaye Variable ya iska argument jo hai wo khatam nhi hota even after executing outer function, so isko ham baad mein use kr skte hain ye save rehta hai aur yehi closure hai
- Jab ek function execute hone ke baad bhi uske andar ka variable ya argument memory mein bacha rehta hai, aur usko inner function access kar sakta hai, to is concept ko closure kehte hain.
- Yeh tab hota hai jab inner function outer function ke variables ko use karta hai — even after outer function finish ho jaaye.
callback function = is the function that we can pass to any function and call this function based on any condition at a later point of time
higher order funciton (HOF) = a regular funciton that 1. takes one or more funciton as an argument and or 2. returns a function as a value of it, so koi bhi condition meet krti hai wo funciton higher order funciton kehlaayega
pure function = is the function that produces the same output for the same input
impure funciton = opposite of pure function that means for the same input, it is not going to create same output, so it is depending on something which is called side effect.
side effect = is nothing but the variable which is outside of the scope of a function and function cannot control this particular variable, anyone can change which can create a side effect
IIFE (immediately invoked function expression) = a funciton expression where the code inside the function gets executed immediately after its been defined
call stack = when a function gets executed there is a stack that javascript engine maintains and it works like first in last out, jese hi javascript interpreter ko funciton call dikhta hai kisi line pr so us function ko call stack ke andr store krta hai aur execute hone pr stack se nikaal deta hai, so in short call stack means function execution stack
recursion = means a funciton refer or call itself, recursion use krte hue aapko make sure krna hai ke koi base condition hai jbhi recursion ka sahi use hoga aur sahi work karega. Base condition means under which condition you have to stop recursion 


Best array guide - freecodecamp = https://www.freecodecamp.org/news/javascript-array-tutorial-array-methods-in-js/

DAY 17 - Javascript Array Methods: (freecodecamp news article)
deep copy = 1st level data ke sth andar ke nested arrays ya objects bhi alag copy hote hain taakay agr copy mein koi change kro, original safe rahay
shallow copy = sirf 1st level ka data copy hota hai, andar ke nested array ya objects hon to unka reference copy hota hai naa ke actual data
spread operator = shallow copy krta hai
JSON.parse(JSON.stringify(...)) = deep copy krta hai but with some limitations jese: Functions, undefined, symbols, aur Map, Set ko handle nahi karta, Unko skip ya string mein convert kar deta hai.
includes() = agr hamein jaanna ho ke kia ye value array mein exist krti hai tb ham ye method ye use krte hain. Ye 2 parameters leta hai: value, startingIndex. startingIndex by default zero hota hai.
indexOf() = agr aapko index pata krna ho kisi specific value ka, tb ye method use krte hain. Ye sirf first index return krta hai jese jb isko value mil jaaye tb wrna -1 return krta hai. Ye bhi 2 parameters leta hai: value aur startingIndex
find() & findLast() = is se ham array mein first ya last element find kr skte hain jo hamari certain condition satisfy krta ho. Ye dono eik callback funciton lete hain jiske parameters hain: element, index aur array. Ye dono first ya last element return krte hain based on condition wrna undefined agr koi value match naa karay
findIndex & findLastIndex = ye dono bhi same isi tarh kaam krte hain bs farq ye hai ke index return krte hain wrna -1
every() & some() = jb array ke kisi element pr condition lagaa kr check krna ho tb ye methods use krte hain. Ye dono mehtods array pr iterate krte hain aur based on condition boolean value return krte hain jese every() ke liye hr element pr condition true honi chahiye, jakbe some() ke liye eik element pr bhi condition true hogai to true return krdega. Ye dono bhi 3 parameters lete hain: element, index, array.
filter() = array elements ko filter krta hai based on certain condition. callback function leta hai jiske parameters hain: element, index aur array. array ki shallow copy banaata hai jis mein wohi elements hote hain jinke liye cb funciton truthy value return krta hai baaqi ko neglect krdeta hai 
forEach() = kch return nhi krta isliye isko end of chain use krte hain
sort() = array ko sort krta hai, by default kch unexpected outcomes aaskte hain isliye isko callback function pass krte hain so that sorting cb ki return value pr depend krti hai. callback funciton 2 parameters leta hai a and b jo 2 elements represent krta hai, agr return value: positive ho to b ke baad a aayega, negative ho to a ke baad b aayega, 0 ho to original order rahega same
reduce() = ye methods eik callback leta hai jiske parameters hain: accumulator, element, index, array. har iteration ki return value next iteration ko pass hoti hai, second parameter of this methods is the starting value of accumulator, agar ye ham naa den to accumulator array ki 1st value le lega aur iteration second value yaani index 1 se start hogi

DAY 18 - Javascript Localstorage
localstorage = web browser ka eik feature hai jo allow krta hai developers ko ke user ke browser mein data save krlo. Ye web storage API ka part hai with session storage. key-value pairs mein data accept krta hai aur save rkhta hai even user page refresh karay ya browser ya tab band krde tb bhi
session storage & difference = is mein jo data save hota hai wo tab/browser ke band hone se clear hojaata hai. Aur ye data speci browser tab ke liye hota hai jo share nhi hota jabke localstorage mein data multiple browser tabs aur windows mein accessible hota hai 
delete data from localstorage = iske 2 methods hain eik hai: removeItem(key) jo key leta hai aur us key value pair ko delete krta hai, aur doosra hai: clear() jo saara data clear krdeta hai 
localstorage.key(0) = ye method key ka name get krne ke liye use krte hain jo index leta hai aur us index pr key ka naam bataata hai, agr koi key naa ho us index pr to null return krta hai
- cookies 5kb per domain data le skta hai jbke localstorage 5mb per domain data store kr skta hai
localstorage guide = https://www.freecodecamp.org/news/use-local-storage-in-modern-applications/

Day 19 - JavaScript DOM
DOM (document object model) = basically a structured representation of an html document. kind of tree of nodes or elements created by the browser. DOM is object oriented meaning that each node has its own properties and methods
HTML collection array jesa dikhta hai but is mien aur array mein ye difference hai ke html collection ke sth ham array ka har method use nhi kr skte iske liye hamein collection ko array banaana prta hai pehle
innerText aur textContent difference = ye dono hi text ko change krne ke liye use hote hain, difference ye hai ke innerText zaadaa attention deta hai styles pr jese agr kisis element ko display: none; property di to innerText mein bhi wo show nhi hoga lekin textContent mein show hota hai even page se hide hojaata hai tb bhi 
querySelector = is mein aap koi bhi css selector use krke element select kr skte hain
nodelist = querySelectorAll ye return krta hai hamain, jis pr ham easily array methods run kr skte hain unlike html collection
text node = represent white spaces like line break that's why instead of using childNodes, use children and instead of using firstChild, use firstElementChild
- isi tarh lastChild aur lastElementChild method hai, nextSibling aur nextElementSibling method hai, previousSibling aur previousElementSibling hai jo eik text node deta hai aur eik sahi kaam krta hai
className = kisi bhi element ki classes get krne ke liy yehi use krte hain 
e.type = bataata hai konsa event hai ye jo abhi trigger hua
e.clientX & e.clientY = ye mouse ki pisition bataate hain window se
e.offsetX & e.offsetY = ye mouse ki position usi element se bataata hai jis pr event trigger hua hai
event.ctrlKey, event.shiftKey & event.altKey = ye boolean value return krte hain like in keys hold krke agr koi event trigger hua to ye methods true return karengay wrna false 
mouseenter = event hai jo sirf element pr hi trigger hota hai
mouseover = event hai jo inner elements pr bhi trigger hojaata hai yehi difference baaqi dono eik jese hain
mouseleave = element ke baahar jaane pr trigger hota hai
mouseout = element ke baahar jaane pr aur inner element se baahar jaane pr bhi trigger hota hai
- keypress event is deprecated thats why always use keydown event
keydown event = tab trigger hota hai jab key press hoti hai, lekin us waqt character input field mein add nahi hua hota. Isliye e.target.value purani value return karta hai (jo input ke andar tha key press hone se pehle).
keypress = Jab printable character key press hoti hai. No value updated
keyup = Jab key chhodi jaati hai (key release hoti hai), updated value milti hai
input = Jab input value change hoti hai (real-time typing), yehi best hai updated value milti hai
